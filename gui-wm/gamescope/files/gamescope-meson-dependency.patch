--- a/layer/meson.build
+++ b/layer/meson.build
@@ -2,9 +2,10 @@ vkroots_dep = dependency('vkroots')
 dep_xcb = dependency('xcb')
 dep_x11_xcb = dependency('x11-xcb')
 wayland_client = dependency('wayland-client')
+glm = dependency('glm')
 
 gamescope_wsi_layer = shared_library('VkLayer_FROG_gamescope_wsi_' + build_machine.cpu_family(), 'VkLayer_FROG_gamescope_wsi.cpp', protocols_client_src,
-  dependencies     : [ vkroots_dep, dep_xcb, dep_x11, dep_x11_xcb, glm_dep, wayland_client ],
+  dependencies     : [ vkroots_dep, dep_xcb, dep_x11, dep_x11_xcb, glm, wayland_client ],
   install          : true )
 
 out_lib_dir = join_paths(prefix, lib_dir)
@@ -15,4 +16,4 @@ configure_file(
     configuration : {'family' : build_machine.cpu_family(), 'lib_dir' : out_lib_dir },
     install       : true,
     install_dir   : join_paths(data_dir, 'vulkan', 'implicit_layer.d'),
-)
\ No newline at end of file
+)
--- a/meson.build
+++ b/meson.build
@@ -50,10 +50,8 @@ dep_x11 = dependency('x11')
 dep_wayland = dependency('wayland-client')
 vulkan_dep = dependency('vulkan')
 
-glm_proj = subproject('glm')
-glm_dep = glm_proj.get_variable('glm_dep')
-stb_proj = subproject('stb')
-stb_dep = stb_proj.get_variable('stb_dep')
+glm_proj = dependency('glm')
+stb_proj = dependency('stb')
 
 if get_option('enable_openvr_support')
   openvr_dep = dependency('openvr', version: '>= 2.7', required : false)
--- a/src/meson.build
+++ b/src/meson.build
@@ -23,6 +23,8 @@ cap_dep = dependency('libcap', required: get_option('rt_cap'))
 epoll_dep = dependency('epoll-shim', required: false)
 sdl2_dep = dependency('SDL2', required: get_option('sdl2_backend'))
 avif_dep = dependency('libavif', version: '>=1.0.0', required: get_option('avif_screenshots'))
+glm = dependency('glm')
+stb = dependency('stb')
 
 wlroots_dep = dependency(
   'wlroots',
@@ -193,10 +195,10 @@ gamescope_version = configure_file(
     include_directories : [reshade_include, sol2_include],
     dependencies: [
       dep_wayland, dep_x11, dep_xdamage, dep_xcomposite, dep_xrender, dep_xext, dep_xfixes,
-      dep_xxf86vm, dep_xres, glm_dep, drm_dep, wayland_server,
+      dep_xxf86vm, dep_xres, glm, drm_dep, wayland_server,
       xkbcommon, thread_dep, sdl2_dep, wlroots_dep,
       vulkan_dep, liftoff_dep, dep_xtst, dep_xmu, cap_dep, epoll_dep, pipewire_dep, librt_dep,
-      stb_dep, displayinfo_dep, openvr_dep, dep_xcursor, avif_dep, dep_xi,
+      stb, displayinfo_dep, openvr_dep, dep_xcursor, avif_dep, dep_xi,
       libdecor_dep, eis_dep, luajit_dep, libinput_dep, libsystemd_dep,
     ],
     install: true,
@@ -217,9 +219,9 @@ endif
 executable('gamescopereaper', ['Apps/gamescopereaper.cpp', gamescope_core_src], gamescope_version, install:true )
 
 benchmark_dep = dependency('benchmark', required: get_option('benchmark'), disabler: true)
-executable('gamescope_color_microbench', ['color_bench.cpp', 'color_helpers.cpp'], gamescope_core_src, gamescope_version, dependencies:[benchmark_dep, glm_dep])
+executable('gamescope_color_microbench', ['color_bench.cpp', 'color_helpers.cpp'], gamescope_core_src, gamescope_version, dependencies:[benchmark_dep, glm])
 
-executable('gamescope_color_tests', ['color_tests.cpp', 'color_helpers.cpp'], gamescope_core_src, gamescope_version, dependencies:[glm_dep])
+executable('gamescope_color_tests', ['color_tests.cpp', 'color_helpers.cpp'], gamescope_core_src, gamescope_version, dependencies:[glm])
 
 executable('gamescopectl', ['Apps/gamescopectl.cpp'], gamescope_core_src, gamescope_version, protocols_client_src, dependencies: [dep_wayland], install:true )
 
